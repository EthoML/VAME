"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6978],{2749:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var r=i(4848),c=i(8453);const t={sidebar_label:"auxiliary",title:"util.auxiliary"},s=void 0,l={id:"reference/util/auxiliary",title:"util.auxiliary",description:"logger\\_config",source:"@site/docs/reference/util/auxiliary.md",sourceDirName:"reference/util",slug:"/reference/util/auxiliary",permalink:"/VAME/docs/reference/util/auxiliary",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"auxiliary",title:"util.auxiliary"},sidebar:"docsSidebar",previous:{title:"visualization",permalink:"/VAME/docs/reference/preprocessing/visualization"},next:{title:"cli",permalink:"/VAME/docs/reference/util/cli"}},d={},o=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"get_version",id:"get_version",level:4},{value:"check_torch_device",id:"check_torch_device",level:4},{value:"_convert_enums_to_values",id:"_convert_enums_to_values",level:4},{value:"create_config_template",id:"create_config_template",level:4},{value:"read_config",id:"read_config",level:4},{value:"write_config",id:"write_config",level:4},{value:"update_config",id:"update_config",level:4},{value:"read_states",id:"read_states",level:4}];function a(e){const n={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,r.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,r.jsx)(n.h4,{id:"get_version",children:"get_version"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_version() -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Gets the VAME package version from pyproject.toml."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"str"}),": The version string."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"check_torch_device",children:"check_torch_device"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def check_torch_device() -> bool\n"})}),"\n",(0,r.jsx)(n.h4,{id:"_convert_enums_to_values",children:"_convert_enums_to_values"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def _convert_enums_to_values(obj: Any) -> Any\n"})}),"\n",(0,r.jsx)(n.p,{children:"Recursively converts enum values to their string representations."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"obj"})," (",(0,r.jsx)(n.code,{children:"Any"}),"): The object to convert."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Any"}),": The converted object with enum values replaced by their string representations."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"create_config_template",children:"create_config_template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def create_config_template() -> Tuple[dict, ruamel.yaml.YAML]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a template for the config.yaml file."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Tuple[dict, ruamel.yaml.YAML]"}),": A tuple containing the template dictionary and the Ruamel YAML instance."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"read_config",children:"read_config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def read_config(config_file: str) -> dict\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reads structured config file defining a project."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config_file"})," (",(0,r.jsx)(n.code,{children:"str"}),"): Path to the config file."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dict"}),": The contents of the config file as a dictionary."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"write_config",children:"write_config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def write_config(config_path: str, config: dict) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Write structured config file."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config_path"})," (",(0,r.jsx)(n.code,{children:"str"}),"): Path to the config file."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.code,{children:"dict"}),"): Dictionary containing the config data."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_config",children:"update_config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@save_state(model=UpdateConfigFunctionSchema)\ndef update_config(config: dict, config_update: dict) -> dict\n"})}),"\n",(0,r.jsx)(n.h4,{id:"read_states",children:"read_states"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def read_states(config: dict) -> dict\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reads the states.json file."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.code,{children:"dict"}),"): Dictionary containing the config data."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dict"}),": The contents of the states.json file as a dictionary."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var r=i(6540);const c={},t=r.createContext(c);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);