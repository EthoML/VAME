"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6729],{9480:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var l=i(4848),s=i(8453);const r={sidebar_label:"umap",title:"visualization.umap"},o=void 0,t={id:"reference/visualization/umap",title:"visualization.umap",description:"logger\\_config",source:"@site/docs/reference/visualization/umap.md",sourceDirName:"reference/visualization",slug:"/reference/visualization/umap",permalink:"/VAME/docs/reference/visualization/umap",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"umap",title:"visualization.umap"},sidebar:"docsSidebar",previous:{title:"report",permalink:"/VAME/docs/reference/visualization/report"}},a={},d=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"umap_embedding",id:"umap_embedding",level:4},{value:"umap_vis_matplotlib",id:"umap_vis_matplotlib",level:4},{value:"umap_vis_plotly",id:"umap_vis_plotly",level:4},{value:"visualize_umap",id:"visualize_umap",level:4}];function c(e){const n={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,l.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,l.jsx)(n.h4,{id:"umap_embedding",children:"umap_embedding"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def umap_embedding(config: dict, num_points: int = 30_000) -> xr.Dataset\n"})}),"\n",(0,l.jsx)(n.p,{children:"Perform UMAP embedding for a sample of the entire project."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config"})," (",(0,l.jsx)(n.code,{children:"dict"}),"): Configuration parameters."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"num_points"})," (",(0,l.jsx)(n.code,{children:"int"}),"): Number of points to use for UMAP embedding. Default is 30,000."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"xr.Dataset"}),": UMAP embedding and accompanying data for the sampled indices."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"umap_vis_matplotlib",children:"umap_vis_matplotlib"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def umap_vis_matplotlib(embed: np.ndarray,\n                        num_points: int = 30_000,\n                        labels: Optional[np.ndarray] = None,\n                        title: Optional[str] = None,\n                        show_legend: bool = True,\n                        label_type: str = "none") -> Figure\n'})}),"\n",(0,l.jsx)(n.p,{children:"Visualize UMAP embedding."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"embed"})," (",(0,l.jsx)(n.code,{children:"np.ndarray"}),"): UMAP embedding."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"num_points"})," (",(0,l.jsx)(n.code,{children:"int"}),"): Number of data points to visualize. Default is 30,000."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"labels"})," (",(0,l.jsx)(n.code,{children:"np.ndarray, optional"}),"): Motif or community labels. Default is None."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"title"})," (",(0,l.jsx)(n.code,{children:"str, optional"}),"): Title for the plot. Default is None."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"show_legend"})," (",(0,l.jsx)(n.code,{children:"bool, optional"}),"): Whether to show legend for labeled plots. Default is True."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"label_type"})," (",(0,l.jsx)(n.code,{children:"str, optional"}),"): Type of labels ('none', 'motif', 'community'). Default is 'none'."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Figure"}),": Matplotlib figure object."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"umap_vis_plotly",children:"umap_vis_plotly"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def umap_vis_plotly(embed: np.ndarray,\n                    labels_motif: Optional[np.ndarray] = None,\n                    labels_community: Optional[np.ndarray] = None,\n                    session_names: Optional[list] = None,\n                    num_points: int = 30_000,\n                    title: str = "UMAP",\n                    marker_size: float = 3.5,\n                    marker_opacity: float = 0.7) -> go.Figure\n'})}),"\n",(0,l.jsx)(n.p,{children:"Create an interactive Plotly UMAP scatter with dropdown to select labels:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"None: grey points"}),"\n",(0,l.jsx)(n.li,{children:"Motif: colored by motif labels"}),"\n",(0,l.jsx)(n.li,{children:"Community: colored by community labels"}),"\n",(0,l.jsx)(n.li,{children:"Session: colored by session labels"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"embed"})," (",(0,l.jsx)(n.code,{children:"np.ndarray"}),"): 2D UMAP embedding array of shape (N,2)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"labels_motif"})," (",(0,l.jsx)(n.code,{children:"np.ndarray or None"}),"): 1D motif labels of length N."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"labels_community"})," (",(0,l.jsx)(n.code,{children:"np.ndarray or None"}),"): 1D community labels of length N."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"session_names"})," (",(0,l.jsx)(n.code,{children:"list or None"}),"): List of session names for each point."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"num_points"})," (",(0,l.jsx)(n.code,{children:"int"}),"): Maximum number of points to show."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"title"})," (",(0,l.jsx)(n.code,{children:"str"}),'): Title for the figure. Defaults to "UMAP".']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"marker_size"})," (",(0,l.jsx)(n.code,{children:"float"}),"): Size of the markers in the plot."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"marker_opacity"})," (",(0,l.jsx)(n.code,{children:"float"}),"): Opacity of the markers in the plot."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"plotly.graph_objs.Figure"}),": The interactive Plotly figure."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"visualize_umap",children:"visualize_umap"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def visualize_umap(config: dict,\n                   num_points: int = 30_000,\n                   save_to_file: bool = True,\n                   show_figure: Literal["none", "matplotlib", "plotly",\n                                        "all"] = "none",\n                   save_logs: bool = True) -> None\n'})}),"\n",(0,l.jsx)(n.p,{children:'Visualize UMAP embeddings based on configuration settings.\nFills in the values in the "visualization_umap" key of the states.json file.\nSaves results files at:'}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["project_name/","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["results/","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"umap_embedding.nc"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["reports/","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["umap/","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"umap_<model>_<seg>-<n_clusters>.png              (UMAP visualization without labels)"}),"\n",(0,l.jsx)(n.li,{children:"umap_<model>_<seg>-<n_clusters>_motif.png        (UMAP visualization with motif labels)"}),"\n",(0,l.jsx)(n.li,{children:"umap_<model>_<seg>-<n_clusters>_community.png    (UMAP visualization with community labels)"}),"\n",(0,l.jsx)(n.li,{children:"umap_<model>_<seg>-<n_clusters>_interactive.html (Interactive UMAP visualization)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config"})," (",(0,l.jsx)(n.code,{children:"dict"}),"): Configuration parameters."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"num_points"})," (",(0,l.jsx)(n.code,{children:"int, optional"}),"): Number of data points to visualize. Default is 30,000."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"save_to_file"})," (",(0,l.jsx)(n.code,{children:"bool, optional"}),"): Save the figure to file. Default is True."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"show_figure"})," (",(0,l.jsx)(n.code,{children:'Literal["none", "matplotlib", "plotly", "all"], optional'}),'): Show the figure. Default is "none".']}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'"none": do not show'}),"\n",(0,l.jsx)(n.li,{children:'"matplotlib": show with matplotlib'}),"\n",(0,l.jsx)(n.li,{children:'"plotly": show with plotly'}),"\n",(0,l.jsx)(n.li,{children:'"all": show with both matplotlib and plotly'}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"save_logs"})," (",(0,l.jsx)(n.code,{children:"bool, optional"}),"): Save logs. Default is True."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"None"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var l=i(6540);const s={},r=l.createContext(s);function o(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);