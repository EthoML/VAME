"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5270],{7451:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var r=s(4848),i=s(8453);const t={sidebar_label:"video",title:"video.video"},o=void 0,l={id:"reference/video/video",title:"video.video",description:"get\\video\\frame\\_rate",source:"@site/docs/reference/video/video.md",sourceDirName:"reference/video",slug:"/reference/video/",permalink:"/VAME/docs/reference/video/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"video",title:"video.video"},sidebar:"docsSidebar",previous:{title:"sample_data",permalink:"/VAME/docs/reference/util/sample_data"}},d={},c=[{value:"get_video_frame_rate",id:"get_video_frame_rate",level:4},{value:"extract_session_number",id:"extract_session_number",level:4},{value:"find_matching_session_files",id:"find_matching_session_files",level:4}];function a(e){const n={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"get_video_frame_rate",children:"get_video_frame_rate"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_video_frame_rate(video_path)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"extract_session_number",children:"extract_session_number"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def extract_session_number(filename: str,\n                           pattern=r"(?:Session)0*(\\d+)\\D") -> str | None\n'})}),"\n",(0,r.jsx)(n.p,{children:"Takes a filename and finds a match based on a regex pattern string"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"filename"})," (",(0,r.jsx)(n.code,{children:"str"}),"): String to search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pattern"})," (",(0,r.jsx)(n.code,{children:"regexp, optional"}),"): regex expression for the search pattern, by default r'(?",":Session",")0*(\\d+)\\D'"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"literal eval return"}),": returns the capture group from the regex expression as the literal eval type."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"find_matching_session_files",children:"find_matching_session_files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def find_matching_session_files(files: list, session_num) -> list\n"})}),"\n",(0,r.jsx)(n.p,{children:"Using a regex pattern, finds all files that match the session number."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"files"})," (",(0,r.jsx)(n.code,{children:"list"}),"): list of file paths to search through"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"session_num"}),": number to search for"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"list"}),": list of files with the matching session number"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);